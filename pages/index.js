import Head from "next/head";
import styles from "../styles/Home.module.css";
import { RecaptchaVerifier, signInWithPhoneNumber } from "firebase/auth";
import { useState, useEffect, useRef } from "react";
import { auth } from "../src/firebase";
import { useRouter } from "next/router";

export default function Home() {
  const [phone, setPhone] = useState("");
  const [code, setCode] = useState("");
  const [confirmation, setConfirmation] = useState("");
  const [canLogin, setCanLogin] = useState(null);

  const recaptchaConRef = useRef(null);
  const recaptchaVerifier = useRef(null);

  useEffect(() => {
    recaptchaVerifier.current = new RecaptchaVerifier(
      recaptchaConRef.current,
      {
        size: "normal",
        callback: (response) => {
          setCanLogin(response);
        },
        "expired-callback": () => {},
      },
      auth
    );
    recaptchaVerifier.current.render();
    return  recaptchaVerifier.current.clear()
  }, []);
  const router = useRouter();

  const onSubmit = (e) => {
   
    if (confirmation) {
      console.log("code");

      confirmation
        .confirm(code)
        .then((result) => {
          const user = result.user;
          router.push("/test");
        })
        .catch((error) => console.log(error));
    } else {
      console.log("phone");
      signInWithPhoneNumber(auth, phone, recaptchaVerifier.current)
        .then((confirmationResult) => {
          console.log("DFDd", confirmationResult);
          setConfirmation(confirmationResult);
        })
        .catch((error) => console.log(error));
    }
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Welcome to test-tinder</h1>
        <div className={styles.form} onSubmit={onSubmit}>
          <h3 className={styles.titleLogin}>Login</h3>
          {!confirmation ? (
            <input
              value={phone}
              onChange={(e) => setPhone(e.target.value)}
              required
              placeholder="Please enter phone  "
            />
          ) : (
            <input
              value={code}
              onChange={(e) => setCode(e.target.value)}
              required
              placeholder="Please enter code "
            />
          )}
          <div ref={recaptchaConRef} />
          <button disabled={!canLogin} onClick={onSubmit}>
            Submit
          </button>
        </div>
      </main>

      <footer className={styles.footer}>
        Powered by <span className={styles.logo}>test</span>
      </footer>
    </div>
  );
}
